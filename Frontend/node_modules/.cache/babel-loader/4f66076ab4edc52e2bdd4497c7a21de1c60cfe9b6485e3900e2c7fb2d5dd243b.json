{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\Everything AI\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!inputText.trim()) return;\n    setIsLoading(true);\n    setError('');\n    try {\n      const newMessage = {\n        content: inputText,\n        isBot: false\n      };\n      setMessages(prev => [...prev, newMessage]);\n      const response = await fetch(process.env.REACT_APP_API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: [{\n            role: 'system',\n            content: 'You are a helpful assistant. Respond conversationally'\n          }, {\n            role: 'user',\n            content: inputText\n          }]\n        })\n      });\n      if (!response.ok) throw new Error('API request failed');\n      const data = await response.json();\n      const botMessage = data.choices[0].message.content.replace(/\\\\(?:boxed|text){([^}]*)}/g, '$1').replace(/\\\\\\\\(?:\\(|\\))/g, '').replace(/\\$/g, '');\n      setMessages(prev => [...prev, {\n        content: botMessage,\n        isBot: true\n      }]);\n      setInputText('');\n    } catch (err) {\n      setError(err.message || 'Failed to get response');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.isBot ? 'bot' : 'user'}`,\n        children: msg.content\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"Type your message...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"C3p2PuhBrX9V49MS8tTiAMn4wWQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","inputText","setInputText","isLoading","setIsLoading","error","setError","handleSubmit","e","preventDefault","trim","newMessage","content","isBot","prev","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","role","ok","Error","data","json","botMessage","choices","message","replace","err","className","children","map","msg","i","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/Everything AI/Frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!inputText.trim()) return;\r\n\r\n    setIsLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const newMessage = { content: inputText, isBot: false };\r\n      setMessages(prev => [...prev, newMessage]);\r\n      \r\n      const response = await fetch(process.env.REACT_APP_API_URL, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          messages: [\r\n            { role: 'system', content: 'You are a helpful assistant. Respond conversationally' },\r\n            { role: 'user', content: inputText }\r\n          ]\r\n        })\r\n      });\r\n\r\n      if (!response.ok) throw new Error('API request failed');\r\n      \r\n      const data = await response.json();\r\n      const botMessage = data.choices[0].message.content\r\n        .replace(/\\\\(?:boxed|text){([^}]*)}/g, '$1')\r\n        .replace(/\\\\\\\\(?:\\(|\\))/g, '')\r\n        .replace(/\\$/g, '');\r\n      \r\n      setMessages(prev => [...prev, { content: botMessage, isBot: true }]);\r\n      setInputText('');\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to get response');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, i) => (\r\n          <div key={i} className={`message ${msg.isBot ? 'bot' : 'user'}`}>\r\n            {msg.content}\r\n          </div>\r\n        ))}\r\n        {isLoading && <div className=\"loading\">Processing...</div>}\r\n        {error && <div className=\"error\">{error}</div>}\r\n      </div>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n          disabled={isLoading}\r\n        />\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? 'Sending...' : 'Send'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// DOM Elements\nconst sidebar = document.getElementById('sidebar');\nconst menuButton = document.getElementById('menu-button');\nconst themeToggle = document.getElementById('theme-toggle');\nconst mobileThemeToggle = document.getElementById('mobile-theme-toggle');\nconst chatInput = document.getElementById('chat-input');\nconst sendButton = document.getElementById('send-button');\nconst messagesContainer = document.getElementById('messages');\nconst welcomeScreen = document.getElementById('welcome-screen');\nconst examplePrompts = document.querySelectorAll('.example-prompt');\n\n// Mobile menu toggle\nmenuButton.addEventListener('click', () => {\n  sidebar.classList.toggle('active');\n});\n\n// Theme toggle\nfunction toggleTheme() {\n  const isDarkMode = document.body.getAttribute('data-theme') === 'dark';\n  if (isDarkMode) {\n    document.body.removeAttribute('data-theme');\n    themeToggle.innerHTML = '<span class=\"icon\">🌙</span> Dark Mode';\n    mobileThemeToggle.innerHTML = '<span class=\"icon\">🌙</span>';\n  } else {\n    document.body.setAttribute('data-theme', 'dark');\n    themeToggle.innerHTML = '<span class=\"icon\">☀️</span> Light Mode';\n    mobileThemeToggle.innerHTML = '<span class=\"icon\">☀️</span>';\n  }\n}\nthemeToggle.addEventListener('click', toggleTheme);\nmobileThemeToggle.addEventListener('click', toggleTheme);\n\n// Auto-resize chat input\nchatInput.addEventListener('input', () => {\n  sendButton.disabled = chatInput.value.trim() === '';\n  chatInput.style.height = 'auto';\n  chatInput.style.height = Math.min(chatInput.scrollHeight, 200) + 'px';\n});\n\n// Message handling\nsendButton.addEventListener('click', sendMessage);\nchatInput.addEventListener('keydown', e => {\n  if (e.key === 'Enter' && !e.shiftKey) {\n    e.preventDefault();\n    sendMessage();\n  }\n});\n\n// Example prompts\nexamplePrompts.forEach(prompt => {\n  prompt.addEventListener('click', () => {\n    const promptText = prompt.querySelector('p').textContent;\n    chatInput.value = promptText;\n    chatInput.dispatchEvent(new Event('input'));\n    welcomeScreen.style.display = 'none';\n    messagesContainer.style.display = 'block';\n    addMessage(promptText, 'user');\n    setTimeout(() => simulateTyping(), 500);\n  });\n});\n\n// Conversations\ndocument.querySelectorAll('.conversation').forEach(convo => {\n  convo.addEventListener('click', () => {\n    document.querySelectorAll('.conversation').forEach(c => c.classList.remove('active'));\n    convo.classList.add('active');\n    welcomeScreen.style.display = 'none';\n    messagesContainer.style.display = 'block';\n    if (window.innerWidth <= 768) {\n      sidebar.classList.remove('active');\n    }\n  });\n});\n\n// New chat\ndocument.querySelector('.new-chat-btn').addEventListener('click', () => {\n  messagesContainer.innerHTML = '';\n  welcomeScreen.style.display = 'flex';\n  messagesContainer.style.display = 'none';\n  document.querySelectorAll('.conversation').forEach(c => c.classList.remove('active'));\n  if (window.innerWidth <= 768) {\n    sidebar.classList.remove('active');\n  }\n});\n\n// Message functions\nfunction sendMessage() {\n  const message = chatInput.value.trim();\n  if (message) {\n    welcomeScreen.style.display = 'none';\n    messagesContainer.style.display = 'block';\n    addMessage(message, 'user');\n    chatInput.value = '';\n    chatInput.style.height = 'auto';\n    sendButton.disabled = true;\n    setTimeout(() => simulateTyping(), 500);\n  }\n}\nfunction addMessage(text, sender) {\n  const messageElement = document.createElement('div');\n  messageElement.className = `message ${sender}-message`;\n  const avatarLetter = sender === 'user' ? 'U' : 'N';\n  messageElement.innerHTML = `\n        <div class=\"message-avatar ${sender}-avatar\">${avatarLetter}</div>\n        <div class=\"message-content\">\n            <div class=\"message-sender\">${sender === 'user' ? 'You' : 'NexusAI'}</div>\n            <div class=\"message-bubble\">${text}</div>\n            ${sender === 'ai' ? `\n            <div class=\"message-actions\">\n                <button class=\"message-action\">\n                    <span class=\"icon\">👍</span> Like\n                </button>\n                <button class=\"message-action\">\n                    <span class=\"icon\">👎</span> Dislike\n                </button>\n                <button class=\"message-action\">\n                    <span class=\"icon\">📋</span> Copy\n                </button>\n            </div>` : ''}\n        </div>\n    `;\n  messagesContainer.appendChild(messageElement);\n  messageElement.scrollIntoView({\n    behavior: 'smooth'\n  });\n}\n\n// Typing simulation\nfunction simulateTyping() {\n  const typingIndicator = document.createElement('div');\n  typingIndicator.className = 'message ai-message';\n  typingIndicator.innerHTML = `\n        <div class=\"message-avatar ai-avatar\">N</div>\n        <div class=\"message-content\">\n            <div class=\"message-sender\">NexusAI</div>\n            <div class=\"message-bubble\">\n                <div class=\"typing-indicator\">\n                    <span>●</span><span>●</span><span>●</span>\n                </div>\n            </div>\n        </div>\n    `;\n  messagesContainer.appendChild(typingIndicator);\n  typingIndicator.scrollIntoView({\n    behavior: 'smooth'\n  });\n  setTimeout(() => {\n    messagesContainer.removeChild(typingIndicator);\n    const responses = [`I'd be happy to help with that! Here's a starting point...`, `Here's a responsive navigation menu...`, `Quantum computing is like giving a computer superpowers...`];\n    addMessage(responses[Math.floor(Math.random() * responses.length)], 'ai');\n  }, 1500);\n}\n\n// Clipboard handling\ndocument.addEventListener('click', function (e) {\n  if (e.target.closest('.message-action')) {\n    const action = e.target.closest('.message-action');\n    if (action.textContent.includes('Copy')) {\n      const text = action.closest('.message-content').querySelector('.message-bubble').textContent;\n      navigator.clipboard.writeText(text.trim()).then(() => {\n        action.innerHTML = '<span class=\"icon\">✓</span> Copied';\n        setTimeout(() => {\n          action.innerHTML = '<span class=\"icon\">📋</span> Copy';\n        }, 2000);\n      });\n    }\n  }\n});","map":{"version":3,"names":["sidebar","document","getElementById","menuButton","themeToggle","mobileThemeToggle","chatInput","sendButton","messagesContainer","welcomeScreen","examplePrompts","querySelectorAll","addEventListener","classList","toggle","toggleTheme","isDarkMode","body","getAttribute","removeAttribute","innerHTML","setAttribute","disabled","value","trim","style","height","Math","min","scrollHeight","sendMessage","e","key","shiftKey","preventDefault","forEach","prompt","promptText","querySelector","textContent","dispatchEvent","Event","display","addMessage","setTimeout","simulateTyping","convo","c","remove","add","window","innerWidth","message","text","sender","messageElement","createElement","className","avatarLetter","appendChild","scrollIntoView","behavior","typingIndicator","removeChild","responses","floor","random","length","target","closest","action","includes","navigator","clipboard","writeText","then"],"sources":["C:/Users/Lenovo/Documents/Everything AI/Frontend/src/index.js"],"sourcesContent":["// DOM Elements\r\nconst sidebar = document.getElementById('sidebar');\r\nconst menuButton = document.getElementById('menu-button');\r\nconst themeToggle = document.getElementById('theme-toggle');\r\nconst mobileThemeToggle = document.getElementById('mobile-theme-toggle');\r\nconst chatInput = document.getElementById('chat-input');\r\nconst sendButton = document.getElementById('send-button');\r\nconst messagesContainer = document.getElementById('messages');\r\nconst welcomeScreen = document.getElementById('welcome-screen');\r\nconst examplePrompts = document.querySelectorAll('.example-prompt');\r\n\r\n// Mobile menu toggle\r\nmenuButton.addEventListener('click', () => {\r\n    sidebar.classList.toggle('active');\r\n});\r\n\r\n// Theme toggle\r\nfunction toggleTheme() {\r\n    const isDarkMode = document.body.getAttribute('data-theme') === 'dark';\r\n    \r\n    if (isDarkMode) {\r\n        document.body.removeAttribute('data-theme');\r\n        themeToggle.innerHTML = '<span class=\"icon\">🌙</span> Dark Mode';\r\n        mobileThemeToggle.innerHTML = '<span class=\"icon\">🌙</span>';\r\n    } else {\r\n        document.body.setAttribute('data-theme', 'dark');\r\n        themeToggle.innerHTML = '<span class=\"icon\">☀️</span> Light Mode';\r\n        mobileThemeToggle.innerHTML = '<span class=\"icon\">☀️</span>';\r\n    }\r\n}\r\n\r\nthemeToggle.addEventListener('click', toggleTheme);\r\nmobileThemeToggle.addEventListener('click', toggleTheme);\r\n\r\n// Auto-resize chat input\r\nchatInput.addEventListener('input', () => {\r\n    sendButton.disabled = chatInput.value.trim() === '';\r\n    chatInput.style.height = 'auto';\r\n    chatInput.style.height = Math.min(chatInput.scrollHeight, 200) + 'px';\r\n});\r\n\r\n// Message handling\r\nsendButton.addEventListener('click', sendMessage);\r\nchatInput.addEventListener('keydown', (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n        e.preventDefault();\r\n        sendMessage();\r\n    }\r\n});\r\n\r\n// Example prompts\r\nexamplePrompts.forEach(prompt => {\r\n    prompt.addEventListener('click', () => {\r\n        const promptText = prompt.querySelector('p').textContent;\r\n        chatInput.value = promptText;\r\n        chatInput.dispatchEvent(new Event('input'));\r\n        welcomeScreen.style.display = 'none';\r\n        messagesContainer.style.display = 'block';\r\n        addMessage(promptText, 'user');\r\n        \r\n        setTimeout(() => simulateTyping(), 500);\r\n    });\r\n});\r\n\r\n// Conversations\r\ndocument.querySelectorAll('.conversation').forEach(convo => {\r\n    convo.addEventListener('click', () => {\r\n        document.querySelectorAll('.conversation').forEach(c => c.classList.remove('active'));\r\n        convo.classList.add('active');\r\n        welcomeScreen.style.display = 'none';\r\n        messagesContainer.style.display = 'block';\r\n        \r\n        if (window.innerWidth <= 768) {\r\n            sidebar.classList.remove('active');\r\n        }\r\n    });\r\n});\r\n\r\n// New chat\r\ndocument.querySelector('.new-chat-btn').addEventListener('click', () => {\r\n    messagesContainer.innerHTML = '';\r\n    welcomeScreen.style.display = 'flex';\r\n    messagesContainer.style.display = 'none';\r\n    document.querySelectorAll('.conversation').forEach(c => c.classList.remove('active'));\r\n    \r\n    if (window.innerWidth <= 768) {\r\n        sidebar.classList.remove('active');\r\n    }\r\n});\r\n\r\n// Message functions\r\nfunction sendMessage() {\r\n    const message = chatInput.value.trim();\r\n    if (message) {\r\n        welcomeScreen.style.display = 'none';\r\n        messagesContainer.style.display = 'block';\r\n        addMessage(message, 'user');\r\n        chatInput.value = '';\r\n        chatInput.style.height = 'auto';\r\n        sendButton.disabled = true;\r\n        \r\n        setTimeout(() => simulateTyping(), 500);\r\n    }\r\n}\r\n\r\nfunction addMessage(text, sender) {\r\n    const messageElement = document.createElement('div');\r\n    messageElement.className = `message ${sender}-message`;\r\n    const avatarLetter = sender === 'user' ? 'U' : 'N';\r\n    \r\n    messageElement.innerHTML = `\r\n        <div class=\"message-avatar ${sender}-avatar\">${avatarLetter}</div>\r\n        <div class=\"message-content\">\r\n            <div class=\"message-sender\">${sender === 'user' ? 'You' : 'NexusAI'}</div>\r\n            <div class=\"message-bubble\">${text}</div>\r\n            ${sender === 'ai' ? `\r\n            <div class=\"message-actions\">\r\n                <button class=\"message-action\">\r\n                    <span class=\"icon\">👍</span> Like\r\n                </button>\r\n                <button class=\"message-action\">\r\n                    <span class=\"icon\">👎</span> Dislike\r\n                </button>\r\n                <button class=\"message-action\">\r\n                    <span class=\"icon\">📋</span> Copy\r\n                </button>\r\n            </div>` : ''}\r\n        </div>\r\n    `;\r\n    \r\n    messagesContainer.appendChild(messageElement);\r\n    messageElement.scrollIntoView({ behavior: 'smooth' });\r\n}\r\n\r\n// Typing simulation\r\nfunction simulateTyping() {\r\n    const typingIndicator = document.createElement('div');\r\n    typingIndicator.className = 'message ai-message';\r\n    typingIndicator.innerHTML = `\r\n        <div class=\"message-avatar ai-avatar\">N</div>\r\n        <div class=\"message-content\">\r\n            <div class=\"message-sender\">NexusAI</div>\r\n            <div class=\"message-bubble\">\r\n                <div class=\"typing-indicator\">\r\n                    <span>●</span><span>●</span><span>●</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `;\r\n    \r\n    messagesContainer.appendChild(typingIndicator);\r\n    typingIndicator.scrollIntoView({ behavior: 'smooth' });\r\n    \r\n    setTimeout(() => {\r\n        messagesContainer.removeChild(typingIndicator);\r\n        const responses = [\r\n            `I'd be happy to help with that! Here's a starting point...`,\r\n            `Here's a responsive navigation menu...`, \r\n            `Quantum computing is like giving a computer superpowers...`\r\n        ];\r\n        addMessage(responses[Math.floor(Math.random() * responses.length)], 'ai');\r\n    }, 1500);\r\n}\r\n\r\n// Clipboard handling\r\ndocument.addEventListener('click', function(e) {\r\n    if (e.target.closest('.message-action')) {\r\n        const action = e.target.closest('.message-action');\r\n        if (action.textContent.includes('Copy')) {\r\n            const text = action.closest('.message-content').querySelector('.message-bubble').textContent;\r\n            navigator.clipboard.writeText(text.trim())\r\n                .then(() => {\r\n                    action.innerHTML = '<span class=\"icon\">✓</span> Copied';\r\n                    setTimeout(() => {\r\n                        action.innerHTML = '<span class=\"icon\">📋</span> Copy';\r\n                    }, 2000);\r\n                });\r\n        }\r\n    }\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}